{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","fName","lName","email","contact","setContact","isMouseOver","setMouseOver","handleChange","event","target","name","value","preValue","className","onChange","placeholder","style","background","onMouseOver","onMouseOut","ReactDom","render","document","getElementById"],"mappings":"qNA4EeA,MAxEf,WAGE,MAA8BC,mBAAS,CACrCC,MAAO,GACPC,MAAO,GACPC,MAAO,KACP,mBAJKC,EAAO,KAAEC,EAAU,KAM1B,EAAoCL,oBAAS,GAAM,mBAA5CM,EAAW,KAAEC,EAAY,KAEhC,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEdP,GAAW,SAACQ,GACV,OAAO,2BAEFA,GAAQ,kBACVF,EAAOC,OAYd,OACE,yBAAKE,UAAU,aAEb,qCACSV,EAAQH,MACdG,EAAQF,OAEX,2BAAIE,EAAQD,OACZ,8BACE,2BAEEY,SAAUP,EACVG,KAAK,QACLC,MAAOR,EAAQH,MACfe,YAAY,eAEd,2BACED,SAAUP,EACVG,KAAK,QACLC,MAAOR,EAAQF,MACfc,YAAY,cAEd,2BACED,SAAUP,EACVG,KAAK,QACLC,MAAOR,EAAQD,MACfa,YAAY,UAEd,4BACEC,MAAO,CAAEC,WAAYZ,EAAc,QAAU,SAG7Ca,YAvCR,WACEZ,GAAa,IAuCPa,WArCR,WACEb,GAAa,KAoCoB,aC1DrCc,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.b6019195.chunk.js","sourcesContent":["// use useState to track state(property) in function\n// import useSate\nimport React, { useState } from \"react\";\n\nfunction App() {\n  //[current state, function is used to update state]\n  // useState(initial state to empty string)\n  const [contact, setContact] = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\"\n  });\n\n  const [isMouseOver, setMouseOver] = useState(false);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setContact((preValue) => {\n      return {\n        // spread operator(...) : allows us to copy existing array/object into another array/object\n        ...preValue,\n        [name]: value\n      };\n    });\n  }\n\n  function handleMouseOver() {\n    setMouseOver(true);\n  }\n  function handleMouseOut() {\n    setMouseOver(false);\n  }\n\n  return (\n    <div className=\"container\">\n      {/* useState to update first and last name */}\n      <h1>\n        Hello {contact.fName}\n        {contact.lName}\n      </h1>\n      <p>{contact.email}</p>\n      <form>\n        <input\n          // onchange event: event occurs when value of element has been changed\n          onChange={handleChange}\n          name=\"fName\"\n          value={contact.fName}\n          placeholder=\"First Name\"\n        />\n        <input\n          onChange={handleChange}\n          name=\"lName\"\n          value={contact.lName}\n          placeholder=\"Last Name\"\n        />\n        <input\n          onChange={handleChange}\n          name=\"email\"\n          value={contact.email}\n          placeholder=\"Email\"\n        />\n        <button\n          style={{ background: isMouseOver ? \"black\" : \"white\" }}\n          // html dom event: onMouseOver, onMouseOut\n          // event handling: allows javascript handle html event\n          onMouseOver={handleMouseOver} // handleMouseOver function will be executed when Mouse over\n          onMouseOut={handleMouseOut}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n// ES6 module depend on import and export\nexport default App;\n","// first import React && ReactDom dependencies\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\n// ReactDom package provides DOM specific methods\n// that can be used at top level of app\nimport App from \"./components/App\";\n\n// render() : only render one html element\n// render App component(App.jsx)\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}